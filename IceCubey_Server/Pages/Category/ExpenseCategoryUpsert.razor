@page "/expcategory/create"
@page "/expcategory/edit/{id:int}"
@inject IExpenseCategoryRepository _expenseCategoryRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/Loading_DotsJumping.gif">
            </div>
        }
        else
        {
            <EditForm Model="ExpenseCategory" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="ExpenseCategory.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>ExpenseCategory.Name"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="expcategory" class="btn btn-secondary">Back to Index</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private ExpenseCategoryDTO ExpenseCategory { get; set; } = new ExpenseCategoryDTO();
    private string Title { get; set; } = "Create";
    public bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == 0)
            {
                //create
                IsLoading = false;
            }
            else
            {
                //update
                Title = "Update";
                await LoadCategory();
            }
        }
    }

    private async Task LoadCategory()
    {
        IsLoading = true;
        StateHasChanged();
        ExpenseCategory = await _expenseCategoryRepository.Get(Id);
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertCategory()
    {
        if (ExpenseCategory.Id == 0)
        {
            //create
            await _expenseCategoryRepository.Create(ExpenseCategory);
        }
        else
        {
            //update
            await _expenseCategoryRepository.Update(ExpenseCategory);
        }

        _navigationManager.NavigateTo("/expcategory");
    }
}
