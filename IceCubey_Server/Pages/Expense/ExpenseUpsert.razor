@page "/expense/create"
@page "/expense/edit/{id:int}"
@inject IExpenseRepository _expenseRepository
@inject ICategoryRepository _categoryRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Expense</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/Loading_Multiple.gif">
            </div>
        }
        else
        {
            <EditForm Model="Expense" OnValidSubmit="UpsertExpense">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Expense.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Expense.Name"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Date</label>
                    <InputDate @bind-Value="Expense.Date" class="form-control"></InputDate>
                    <ValidationMessage For="()=>Expense.Date"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Expense.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Expense.Name"></ValidationMessage>
                </div>
                <div class="form-group">
                    <label>Name</label>
                    <InputTextArea @bind-Value="Expense.Description" class="form-control"></InputTextArea>
                    <ValidationMessage For="()=>Expense.Description"></ValidationMessage>
                </div>

                <div class="row pt-3">
                    <div class="btn-group col-6">
                    <div class="form-check">
                        <InputCheckbox @bind-Value="Expense.IsCommon" class="form-check-input"></InputCheckbox>
                        <label class="form-check-label">Is Income Common</label>
                    </div>
                    </div>
                    <div class="btn-group col-6">
                    <div class="form-check">
                        <InputCheckbox @bind-Value="Expense.IsUncommon" class="form-check-input"></InputCheckbox>
                        <label class="form-check-label">Is Income Uncommon</label>
                    </div>
                    </div>
                </div>
                
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="income" class="btn btn-secondary">Back to Index</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private ExpenseDTO Expense { get; set; } = new();
    private IEnumerable<CategoryDTO> Categories { get; set; } = new List<CategoryDTO>();
    private string Title { get; set; } = "Add";
    public bool IsLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadExpense();
        }
    }

    private async Task LoadExpense()
    {
        IsLoading = true;
        StateHasChanged();
        Categories = await _categoryRepository.GetAll();
        if(Id != 0)
        {
            //update
            Title = "Update";
            Expense = await _expenseRepository.Get(Id);
        }
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertExpense()
    {
        if (Expense.Id == 0)
        {
            //create
            await _expenseRepository.Create(Expense);
        }
        else
        {
            //update
            await _expenseRepository.Update(Expense);
        }

        _navigationManager.NavigateTo("expense");
    }
}
