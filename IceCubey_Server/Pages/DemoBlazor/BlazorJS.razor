@page "/blazorjs"
@inject IJSRuntime _JsRunetime

<div class="row">
    <button class="btn-secondary" style="width:200px" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row">
    <button class="btn btn-success m-2" @onclick="ToastrSuccess">Toastr Success</button>
    <button class="btn btn-danger m-2" @onclick="ToastrFailure">Toastr Failure</button>
</div>
<br />
<div class="row">
    <button class="btn btn-success" @onclick="SweetAlertSuccess">SweetAlert Success</button>
    <button class="btn btn-danger" @onclick="SweetAlertFailure">SweetAlert Failure</button>
</div>

<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>Confirmation Pending!</p>
    }
</div>


@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    private bool ConfirmResult { get; set; }

    private async Task TestConfirmBox()
    {
        ConfirmResult = await _JsRunetime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }

    private async Task ToastrSuccess()
    {
        await _JsRunetime.ToastrSuccess("Operation Successfull");
    }
    private async Task ToastrFailure()
    {
        await _JsRunetime.ToastrError("Operation Failed");
    }

    private async Task SweetAlertSuccess()
    {
        await _JsRunetime.InvokeVoidAsync("ShowSwal", "success", "Task Completed");
    }
    private async Task SweetAlertFailure()
    {
        await _JsRunetime.InvokeVoidAsync("ShowSwal", "error", "Task Failed");
    }
}
