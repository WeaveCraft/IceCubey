@page "/demos"
@inject IExpenseRepository _expenseRepository
@inject IExpenseCategoryRepository _expenseCategoryRepository

<SfAccumulationChart>
    <AccumulationChartSeriesCollection>
        <AccumulationChartSeries Type="AccumulationType.Pie"
            DataSource="@Expenses" XName="Name" YName="Amount" InnerRadius="25%">
            <AccumulationDataLabelSettings Visible="true">

            </AccumulationDataLabelSettings>
        </AccumulationChartSeries>
        <AccumulationChartTooltipSettings Enable=true>

        </AccumulationChartTooltipSettings>
    </AccumulationChartSeriesCollection>
</SfAccumulationChart>

@code{
    public IEnumerable<ExpenseDTO> Expenses = new List<ExpenseDTO>();
    public IEnumerable<ExpenseCategoryDTO> Categories = new List<ExpenseCategoryDTO>();
    public void PieTooltipRender(TooltipRenderEventArgs args)
    {
        args.Text = args.Text.Replace(args.Data.PointY.ToString(), Convert.ToDouble(args.Data.PointY).ToString("#,#"));
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadExpenses();
        }
    }

    private async Task LoadExpenses()
    {
        Expenses = await _expenseRepository.GetAll();
        Categories = await _expenseCategoryRepository.GetAll();
        StateHasChanged();
    }
}