@inject ICategoryRepository _incomeCategoryRepository
@inject NavigationManager _navigationManager

<SfButton CssClass="e-success" @onclick="@OnOpenBtnClick">Add Category</SfButton>
<SfDialog Width="250px" @bind-Visible="@IsVisible" IsModal="true" ShowCloseIcon="true">
    <DialogTemplates>
        <Header>
            Dialog Header
        </Header>
        <Content>
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">Add</button>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>

@code {
    private CategoryDTO Category { get; set; } = new CategoryDTO();


    private async Task UpsertCategory()
    {
            //create
            await _incomeCategoryRepository.Create(Category);
            StateHasChanged();
            _navigationManager.NavigateTo("income/create");
            IsVisible = false;
    }


    public bool IsVisible { get; set; } = false;
    public string DialogText { get; set; } = "This is a Dialog";


    private void OnDialogBtnClick()
    {
        IsVisible = false;
    }

    private void OnOpenBtnClick()
    {
        IsVisible = true;
    }
}

<style>
    .dialogContent {
        display: block;
        font-size: 15px;
        word-wrap: break-word;
        text-align: center;
        font-style: normal;
        position: relative;
        top: 16px
    }

    .dialogText {
        background-color: #D3D3D3;
        padding-right: 4px;
        color: black;
        font-family: sans-serif !important;
        font-style: normal;
    }
</style>